#!/usr/bin/env bash

DEVICES=$(mpremote connect list | grep MicroPython | cut -d " " -f 1)

if [ -z $DEVICES ] ; then
  echo "No MicroPython devices found in FS mode"
  exit 1
fi

DEVICE=${DEVICES[0]}

function create_directory {
  echo -n "> creating directory $1"

  RESULT=$(mpremote connect ${DEVICE} mkdir $1)
  ERROR=$?


  if [ $ERROR -eq 0 ] ; then
    echo " .. done!"
  else
    if [[ "$RESULT" == *"EEXIST"* ]] ; then
      echo " .. already exists, skipping."
    else
      echo " .. failed!"
      echo "! it looks like this device is already in use - is Thonny running?"
      exit 1
    fi
  fi
}

function copy {
  for file in $1
  do
    echo -n "> copying file '$file' to: '$2'"
    mpremote connect ${DEVICE} cp $file $2 > /dev/null
    if [ $? -eq 0 ] ; then
      echo " .. done!"
    else
      echo " .. failed!"
    fi
  done
}

# TODO Maybe do not edit the file but create a constants.py.curr and rename it on copy to the device
function update_git_rev() {
  file="${1:?"Need a file as first arg"}"
  rev="$(git rev-parse --short HEAD)"
  sed -i '' -E "s/^(GIT_REV: str =).*/\1 '$rev'/" "$file"  # Most likely works only on MacOS due to the sed differences ie. -i flag!
}

function get_uid() {
  mpremote connect ${DEVICE} exec "import machine; print('{:02x}{:02x}{:02x}{:02x}{:02x}{:02x}{:02x}{:02x}'.format(*machine.unique_id()))"
}

function copy_actual_config() {
  act_config_file="act_config/$(get_uid)-config.py"
  if [ -f "$act_config_file" ]; then
    echo "Copying actual config for this board"
    copy "$act_config_file" :config.py
  else
    echo "No actual config found for this board. Missing file: '$act_config_file'"
  fi
}

# TODO Create a docker container to run these commands in so that the OS issues are fixed (id. sed on MacOS vs Linux etc)
# TODO Have a folder enviro/act_config/ containing files with the name schema: <uid>-config.py for each board in use. Then
#   use these files when installing on a device to be renamed to config.py and copied over to the device.


echo "Copying Enviro firmware files to ${DEVICE} with UID: $(get_uid)"

create_directory enviro
create_directory enviro/boards
create_directory enviro/destinations
create_directory enviro/html
create_directory enviro/html/images
create_directory phew
create_directory phew/phew

copy "main.py" :

update_git_rev :enviro/constants.py

copy "enviro/*.py" :enviro/

copy "enviro/boards/*.py" :enviro/boards/
copy "enviro/destinations/*.py" :enviro/destinations/

copy "enviro/html/*.html" :enviro/html/

copy "enviro/html/images/*" :enviro/html/images/

copy "phew/__init__.py" :phew/
copy "phew/phew/*.py" :phew/phew/

copy_actual_config

